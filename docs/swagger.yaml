basePath: /
definitions:
  user.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  user.User:
    properties:
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      username:
        type: string
    type: object
  user.UserReq:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  user.UserRes:
    properties:
      email:
        type: string
      id:
        type: string
      message:
        type: string
      username:
        type: string
    type: object
  ws.CreateRoomReq:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  ws.ErrorResponse:
    properties:
      error:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: http://localhost:8080/swagger/index.html
host: localhost:8080
info:
  contact:
    email: tlb-kei7@yandex.ru
    name: Katia
    url: github.com/tlb-katia
  description: This is a server for instant messaging
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: RESTful Chat Web Server
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Log in a user with username, email, and password
      parameters:
      - description: User request body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.UserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/user.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user.ErrorResponse'
      summary: log in a user
      tags:
      - user
  /logout:
    get:
      consumes:
      - application/json
      description: Logs out the user by clearing all cookies and redirecting to the
        login page.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully logged out
          schema:
            $ref: '#/definitions/user.UserRes'
      summary: Log out user
      tags:
      - user
  /rooms:
    post:
      consumes:
      - application/json
      description: create a room with id and name
      parameters:
      - description: User request body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/ws.CreateRoomReq'
      produces:
      - application/json
      responses:
        "201":
          description: Room created successfully
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/ws.ErrorResponse'
        "409":
          description: Room ID already exists
          schema:
            $ref: '#/definitions/ws.ErrorResponse'
      summary: create a room
      tags:
      - room
  /rooms/join:
    get:
      consumes:
      - application/json
      description: Join an existing room using WebSocket connection with roomId, userId,
        and username as query parameters.
      parameters:
      - description: Room ID
        in: query
        name: roomId
        required: true
        type: string
      - description: User ID
        in: query
        name: userId
        required: true
        type: string
      - description: Username
        in: query
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "101":
          description: Switching Protocols
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/ws.ErrorResponse'
      summary: Join a room
      tags:
      - room
  /signup:
    post:
      consumes:
      - application/json
      description: Create a new user with username, email, and password
      parameters:
      - description: User request body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.UserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/user.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user.ErrorResponse'
      summary: create a user
      tags:
      - user
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
